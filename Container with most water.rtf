{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red29\green38\blue42;\red255\green255\blue255;\red245\green247\blue249;
\red29\green38\blue42;}
{\*\expandedcolortbl;;\cssrgb\c14902\c19608\c21961;\cssrgb\c100000\c100000\c100000;\cssrgb\c96863\c97647\c98039;
\cssrgb\c14902\c19608\c21961;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Given\'a0
\i n
\i0 \'a0non-negative integers\'a0
\i a
\fs21 1
\i0\fs28 ,\'a0
\i a
\fs21 2
\i0\fs28 , ...,\'a0
\i a
\fs21 n\'a0
\i0\fs28 , where each represents a point at coordinate (
\i i
\i0 ,\'a0
\i a
\fs21 i
\i0\fs28 ).\'a0
\i n
\i0 \'a0vertical lines are drawn such that the two endpoints of line\'a0
\i i
\i0 is at (
\i i
\i0 ,\'a0
\i a
\fs21 i
\i0\fs28 ) and (
\i i
\i0 , 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f1\b \cf2 Note:\'a0
\f0\b0 You may not slant the container and\'a0
\i n
\i0 \'a0is at least 2.\
\pard\pardeftab720\sl400\partightenfactor0

\f2\b\fs26 \cf2 \cb4 Input:
\f3\b0  [1,8,6,2,5,4,8,3,7]\

\f2\b Output:
\f3\b0  49\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf5 \cb3 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97***********\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
class Solution \{\
    public int maxArea(int[] height) \{\
        \
        int i=0,j=0;\
        j=height.length-1;\
        int sum=0;\
        for(;i<j;)\
        \{\
            sum=Math.max(sum,((j-i)*Math.min(height[i],height[j])));\
            if(height[i]<height[j])\
                i++;\
            else\
                j--;\
          \
        \}\
        return sum;\
        \
    \}\
\}}