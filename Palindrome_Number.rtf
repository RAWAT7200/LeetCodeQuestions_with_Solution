{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red29\green38\blue42;\red255\green255\blue255;\red245\green247\blue249;
\red29\green38\blue42;}
{\*\expandedcolortbl;;\cssrgb\c14902\c19608\c21961;\cssrgb\c100000\c100000\c100000;\cssrgb\c96863\c97647\c98039;
\cssrgb\c14902\c19608\c21961;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Determine whether an integer is a palindrome. An integer\'a0is\'a0a\'a0palindrome when it\'a0reads the same backward as forward.\

\f1\b Example 1:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\b\fs26 \cf2 \cb4 Input:
\f3\b0  121\

\f2\b Output:
\f3\b0  true\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f1\b\fs28 \cf2 \cb3 Example 2:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\b\fs26 \cf2 \cb4 Input:
\f3\b0  -121\

\f2\b Output:
\f3\b0  false\

\f2\b Explanation:
\f3\b0  From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f1\b\fs28 \cf2 \cb3 Example 3:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\b\fs26 \cf2 \cb4 Input:
\f3\b0  10\

\f2\b Output:
\f3\b0  false\

\f2\b Explanation:
\f3\b0  Reads 01 from right to left. Therefore it is not a palindrome.\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf5 \cb3 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97***********\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
class Solution(object):\
    def isPalindrome(self, x):\
        """\
        :type x: int\
        :rtype: bool\
        """\
        j=len(str(x))-1\
        i=0\
        xl=str(x)\
        \
        if(i==j):\
            return True\
        else:\
            while(i<=j):\
                if(xl[i]==xl[j]):\
                    i=i+1\
                    j=j-1\
                else:break    \
            else:return True\
         \
        return False}