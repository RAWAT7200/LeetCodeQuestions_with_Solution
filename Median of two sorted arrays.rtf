{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red29\green38\blue42;\red255\green255\blue255;\red245\green247\blue249;
\red29\green38\blue42;\red245\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c14902\c19608\c21961;\cssrgb\c100000\c100000\c100000;\cssrgb\c96863\c97647\c98039;
\cssrgb\c14902\c19608\c21961;\cssrgb\c96863\c97647\c98039;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 There are two sorted arrays\'a0
\f1\b nums1
\f0\b0 \'a0and\'a0
\f1\b nums2
\f0\b0 \'a0of size m and n respectively.\
Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\
You may assume\'a0
\f1\b nums1
\f0\b0 \'a0and\'a0
\f1\b nums2
\f0\b0 \'a0cannot be both empty.\

\f1\b Example 1:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf2 \cb4 nums1 = [1, 3]\
nums2 = [2]\
\
The median is 2.0\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f1\b\fs28 \cf2 \cb3 Example 2:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf2 \cb4 nums1 = [1, 2]\
nums2 = [3, 4]\
\
The median is (2 + 3)/2 = 2.5\
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \cb6 \outl0\strokewidth0 \
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f3\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97***********\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
class Solution \{\
    public double findMedianSortedArrays(int[] nums1, int[] nums2) \{\
        \
        int a,b,m,n,k=0;\
        a=nums1.length;\
        b=nums2.length;\
        int[] res=new int[a+b];\
        \
     \
            \
            \
            for(m=0,n=0;m<a && n<b;)\
        \{\
            if(nums1[m]<=nums2[n])\
            res[k++]=nums1[m++];\
        \
            else\
                res[k++]=nums2[n++];\
                \
     \}\
        \
        \
        if(m==a)\
        \{\
            while(n!=b)\
            \{\
                res[k++]=nums2[n++];\
            \}\
        \}\
        else if(n==b)  \
        \{\
             while(m!=a)\
            \{\
                res[k++]=nums1[m++];\
            \}\
            \
        \}\
        \
        if((a+b)%2==0)\
          return (double ) (res[(a+b-1)/2]+res[(a+b)/2])/2;\
        \
        return (double ) (res[(a+b)/2]);\
            \
            \
        \
        \
    \}\
\}}