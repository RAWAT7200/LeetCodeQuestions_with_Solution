Given a binary tree, return all root-to-leaf paths.

Note: A leaf is a node with no children.

Example:

Input:

   1
 /   \
2     3
 \
  5

Output: ["1->2->5", "1->3"]

Explanation: All root-to-leaf paths are: 1->2->5, 1->3
---------------------------------------

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        string str="";
        check(root,str,res);
        return res;
    }
public:
    void check(TreeNode* root,string str,vector<string> &res)
   {
     if(root==NULL)
     {
      return;
     }
    if(root->left==NULL && root->right==NULL)
    {str=str+to_string(root->val);
        res.push_back(str);
      return;
    }
        
     check(root->left,str+to_string(root->val)+"->",res);
     check(root->right,str+to_string(root->val)+"->",res);   
      
   }
    
    
};