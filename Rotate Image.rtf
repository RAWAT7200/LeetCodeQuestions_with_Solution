{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;\f4\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red29\green38\blue42;\red255\green255\blue255;\red78\green106\blue120;
\red245\green247\blue249;\red29\green38\blue42;}
{\*\expandedcolortbl;;\cssrgb\c14902\c19608\c21961;\cssrgb\c100000\c100000\c100000;\cssrgb\c37647\c49020\c54510;
\cssrgb\c96863\c97647\c98039;\cssrgb\c14902\c19608\c21961;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You are given an\'a0
\i n
\i0 \'a0x\'a0
\i n
\i0 \'a02D matrix representing an image.\
Rotate the image by 90 degrees (clockwise).\

\f1\b Note:
\f0\b0 \
You have to rotate the image\'a0{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/In-place_algorithm"}}{\fldrslt 
\f1\b \cf4 \strokec4 in-place}}, which means you have to modify the input 2D matrix directly.\'a0
\f1\b DO NOT
\f0\b0 \'a0allocate another 2D matrix and do the rotation.\

\f1\b Example 1:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf2 \cb5 Given 
\f3\b input matrix
\f2\b0  = \
[\
  [1,2,3],\
  [4,5,6],\
  [7,8,9]\
],\
\
rotate the input matrix 
\f3\b in-place
\f2\b0  such that it becomes:\
[\
  [7,4,1],\
  [8,5,2],\
  [9,6,3]\
]\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f1\b\fs28 \cf2 \cb3 Example 2:
\f0\b0 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf2 \cb5 Given 
\f3\b input matrix
\f2\b0  =\
[\
  [ 5, 1, 9,11],\
  [ 2, 4, 8,10],\
  [13, 3, 6, 7],\
  [15,14,12,16]\
], \
\
rotate the input matrix 
\f3\b in-place
\f2\b0  such that it becomes:\
[\
  [15,13, 2, 5],\
  [14, 3, 4, 1],\
  [12, 6, 8, 9],\
  [16, 7,10,11]\
]\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\fs28 \cf6 \cb3 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf6 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97***********\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
class Solution \{\
    public void rotate(int[][] matrix) \{\
        int n=matrix.length;\
        \
            for(int i=0;i<n/2;i++)\
            \{ \
                for(int j=i;j<n-i-1;j++)\
                \{\
                 int t=matrix[j][i];\
                    matrix[j][i]=matrix[n-i-1][j];\
                    matrix[n-i-1][j]=matrix[n-j-1][n-i-1];\
                    matrix[n-j-1][n-i-1]=matrix[i][n-j-1];\
                    matrix[i][n-j-1]=t;\
                  \
                  \
                \}\
            \}\
        \
        \
    \}\
\}}